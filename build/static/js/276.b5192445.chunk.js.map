{"version":3,"file":"static/js/276.b5192445.chunk.js","mappings":"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","sources":["pages/projects/giphy-app/componenets/GiphyViewer.js","pages/projects/giphy-app/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tRow,\n\tCol,\n\tCard,\n\tButton,\n\tDropdown,\n\tDropdownButton,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst GIPHY_URL = \"https://api.giphy.com/v1/gifs\";\nconst API_KEY = \"ZisKm2jvN6z9J9QW0ZJAM1OlExIdVCfc\";\n\nconst GiphyViewer = () => {\n\tconst [gifs, setGifs] = useState([]);\n\tconst [term, setTerm] = useState(\"\");\n\tconst [limit, setLimit] = useState();\n\n\tuseEffect(() => {\n\t\tgetTrendingGifs();\n\t}, []);\n\n\tconst getTrendingGifs = () => {\n\t\taxios\n\t\t\t.get(`${GIPHY_URL}/trending?api_key=${API_KEY}&limit=${limit}`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.data);\n\t\t\t\tsetGifs(response.data.data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tconst getrandomGif = () => {\n\t\taxios\n\t\t\t.get(`${GIPHY_URL}/random?api_key=${API_KEY}&limit=10`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.data);\n\t\t\t\tsetGifs([response.data.data]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tconst handleTrendingClick = () => {\n\t\tgetTrendingGifs();\n\t};\n\n\tconst handleChange = (e) => {\n\t\tsetTerm(e.target.value);\n\t};\n\tconst handleRandomClick = () => {\n\t\tgetrandomGif();\n\t};\n\tconst handleClick = () => {\n\t\tsearchGif();\n\t};\n\tconst handleKeyUp = (e) => {\n\t\tif (e.key === \"Enter\") {\n\t\t\tsearchGif();\n\t\t}\n\t};\n\tconst handleSelect = (amount) => {\n\t\tsetLimit(amount);\n\t};\n\tconst searchGif = () => {\n\t\tif (!term) {\n\t\t\talert(\"Please enter a search term!\");\n\t\t\treturn;\n\t\t}\n\t\taxios\n\t\t\t.get(`${GIPHY_URL}/search?api_key=${API_KEY}&q=${term}&limit=10`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.data);\n\t\t\t\tsetGifs(response.data.data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tconst gifComponents = gifs.map((gif,i) => (\n\t\t<GIFCard key={i} title={gif.title} url={gif.images.fixed_width.url} />\n\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={term}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonKeyUp={handleKeyUp}\n\t\t\t\t/>\n\t\t\t\t<Button variant=\"primary\" onClick={handleClick}>\n\t\t\t\t\tSearch\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={handleTrendingClick}>\n\t\t\t\t\tTrending\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"primary\" onClick={handleRandomClick}>\n\t\t\t\t\tRandom\n\t\t\t\t</Button>\n\t\t\t\t<DropdownButton\n\t\t\t\t\tonSelect={handleSelect}\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tid=\"dropdown-basic-button\"\n\t\t\t\t\ttitle=\"limit\"\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t>\n\t\t\t\t\t<Dropdown.Item eventKey={5}>5</Dropdown.Item>\n\t\t\t\t\t<Dropdown.Item eventKey={10}>10</Dropdown.Item>\n\t\t\t\t\t<Dropdown.Item eventKey={15}>15</Dropdown.Item>\n\t\t\t\t\t<Dropdown.Item eventKey={25}>25</Dropdown.Item>\n\t\t\t\t</DropdownButton>\n\t\t\t</div>\n\t\t\t<Row>{gifComponents}</Row>\n\t\t</div>\n\t);\n};\n\nconst GIFCard = (props) => {\n\treturn (\n\t\t<Col xs={6} sm={4} md={3} lg={2}>\n\t\t\t<Card>\n\t\t\t\t<Card.Img variant=\"top\" src={props.url} />\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>{props.title}</Card.Title>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Col>\n\t);\n};\n\nexport default GiphyViewer;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport GiphyViewer from './componenets/GiphyViewer';\nimport './assets/app.css'\nconst App = () => {\n  return (\n    <Container className='mt-5'>\n      <Row>\n        <Col>\n          <GiphyViewer/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"names":["GIPHY_URL","API_KEY","GIFCard","props","_jsx","Col","xs","sm","md","lg","children","_jsxs","Card","Img","variant","src","url","Body","Title","title","GiphyViewer","gifs","setGifs","useState","term","setTerm","limit","setLimit","useEffect","getTrendingGifs","axios","get","concat","then","response","console","log","data","catch","error","searchGif","alert","gifComponents","map","gif","i","images","fixed_width","type","value","onChange","e","target","onKeyUp","key","Button","onClick","handleClick","handleTrendingClick","handleRandomClick","DropdownButton","onSelect","amount","size","id","Dropdown","Item","eventKey","Row","App","Container","className"],"sourceRoot":""}