{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/pages/projects/Index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Dropdown, Menu } from \"daisyui\";\nimport projectsJSON from \"../../assets/data/projects.json\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [projects, setProjects] = useState(projectsJSON);\n  const [filteredProjects, setFilteredProjects] = useState(projectsJSON);\n  const projectList = filteredProjects.map((project, i) => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: project,\n      cardKey: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  });\n  const filterProjects = filter => {\n    if (filter === \"All\") {\n      setFilteredProjects(projects);\n    } else {\n      const filtered = projects.filter(project => project.technologies.includes(filter));\n      setFilteredProjects(filtered);\n    }\n  };\n\n  // Define your dropdown options\n  const dropdownOptions = [\"All\", \"JavaScript\", \"React\", \"HTML\", \"Front-End\", \"Rest Client\", \"API\", \"CSS\", \"Tailwind\"\n  // Add other options as needed\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"justify-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl flex justify-center font-light py-16\",\n        children: \"My\\u2005Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Button, {\n          className: \"btn-dropdown\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Items, {\n          children: dropdownOptions.map(option => /*#__PURE__*/_jsxDEV(Menu.Item, {\n            onClick: () => filterProjects(option),\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: projectList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Index, \"qsY+p18CCAY066h8WckkNHnYk7U=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["useState","Dropdown","Menu","projectsJSON","ProjectCard","jsxDEV","_jsxDEV","Index","_s","projects","setProjects","filteredProjects","setFilteredProjects","projectList","map","project","i","cardKey","fileName","_jsxFileName","lineNumber","columnNumber","filterProjects","filter","filtered","technologies","includes","dropdownOptions","className","children","Button","Items","option","Item","onClick","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/pages/projects/Index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Dropdown, Menu } from \"daisyui\";\r\nimport projectsJSON from \"../../assets/data/projects.json\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\n\r\nconst Index = () => {\r\n  const [projects, setProjects] = useState(projectsJSON);\r\n  const [filteredProjects, setFilteredProjects] = useState(projectsJSON);\r\n\r\n  const projectList = filteredProjects.map((project, i) => {\r\n    return <ProjectCard key={i} project={project} cardKey={i} />;\r\n  });\r\n\r\n  const filterProjects = (filter) => {\r\n    if (filter === \"All\") {\r\n      setFilteredProjects(projects);\r\n    } else {\r\n      const filtered = projects.filter((project) =>\r\n        project.technologies.includes(filter)\r\n      );\r\n      setFilteredProjects(filtered);\r\n    }\r\n  };\r\n\r\n  // Define your dropdown options\r\n  const dropdownOptions = [\r\n    \"All\",\r\n    \"JavaScript\",\r\n    \"React\",\r\n    \"HTML\",\r\n    \"Front-End\",\r\n    \"Rest Client\",\r\n    \"API\",\r\n    \"CSS\",\r\n    \"Tailwind\",\r\n    // Add other options as needed\r\n  ];\r\n\r\n  return (\r\n    <div className=\"justify-items-center\">\r\n      <div className=\"container\">\r\n        <div className=\"text-6xl flex justify-center font-light py-16\">\r\n          Myâ€…Projects\r\n        </div>\r\n        {/* Use DaisyUI's dropdown */}\r\n        <Dropdown>\r\n          <Dropdown.Button className=\"btn-dropdown\">\r\n            Select an option\r\n          </Dropdown.Button>\r\n          <Dropdown.Items>\r\n            {dropdownOptions.map((option) => (\r\n              <Menu.Item key={option} onClick={() => filterProjects(option)}>\r\n                {option}\r\n              </Menu.Item>\r\n            ))}\r\n          </Dropdown.Items>\r\n        </Dropdown>\r\n      </div>\r\n      <div className=\"\">{projectList}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}