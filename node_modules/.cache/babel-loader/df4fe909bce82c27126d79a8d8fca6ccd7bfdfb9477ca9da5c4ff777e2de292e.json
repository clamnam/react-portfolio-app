{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/components/ProjectCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [projects, setProjects] = useState([\n    // ... your project data\n  ]);\n  const [filteredProjects, setFilteredProjects] = useState(projects);\n  const [selectedTag, setSelectedTag] = useState(\"All\");\n  const [allTags, setAllTags] = useState([]);\n  useEffect(() => {\n    // Extract all unique tags from all projects\n    const tagsSet = new Set();\n    projects.forEach(project => {\n      project.tags.forEach(tag => {\n        tagsSet.add(tag);\n      });\n    });\n    const uniqueTags = Array.from(tagsSet);\n    setAllTags([\"All\", ...uniqueTags]); // Include \"All\" option\n  }, [projects]);\n  const projectList = filteredProjects.map((project, i) => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: project,\n      cardKey: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  });\n  const filterProjects = filter => {\n    setSelectedTag(filter);\n    if (filter === \"All\") {\n      setFilteredProjects(projects);\n    } else {\n      const filtered = projects.filter(project => project.tags.includes(filter));\n      setFilteredProjects(filtered);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"justify-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl flex justify-center font-light py-16\",\n        children: \"My\\u2005Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap mb-4\",\n        children: allTags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `badge m-0.5 text-black bg-white cursor-pointer ${selectedTag === tag ? \"bg-gray-300\" : \"\"}`,\n          onClick: () => filterProjects(tag),\n          children: tag\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: projectList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Index, \"cEBbwBV9UufkIB2aeaL+o4vVo40=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","ProjectCard","jsxDEV","_jsxDEV","Index","_s","projects","setProjects","filteredProjects","setFilteredProjects","selectedTag","setSelectedTag","allTags","setAllTags","tagsSet","Set","forEach","project","tags","tag","add","uniqueTags","Array","from","projectList","map","i","cardKey","fileName","_jsxFileName","lineNumber","columnNumber","filterProjects","filter","filtered","includes","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/components/ProjectCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ProjectCard from \"../../components/ProjectCard\";\n\nconst Index = () => {\n  const [projects, setProjects] = useState([\n    // ... your project data\n  ]);\n\n  const [filteredProjects, setFilteredProjects] = useState(projects);\n  const [selectedTag, setSelectedTag] = useState(\"All\");\n  const [allTags, setAllTags] = useState([]);\n\n  useEffect(() => {\n    // Extract all unique tags from all projects\n    const tagsSet = new Set();\n    projects.forEach((project) => {\n      project.tags.forEach((tag) => {\n        tagsSet.add(tag);\n      });\n    });\n    const uniqueTags = Array.from(tagsSet);\n    setAllTags([\"All\", ...uniqueTags]); // Include \"All\" option\n  }, [projects]);\n\n  const projectList = filteredProjects.map((project, i) => {\n    return <ProjectCard key={i} project={project} cardKey={i} />;\n  });\n\n  const filterProjects = (filter) => {\n    setSelectedTag(filter);\n\n    if (filter === \"All\") {\n      setFilteredProjects(projects);\n    } else {\n      const filtered = projects.filter((project) =>\n        project.tags.includes(filter)\n      );\n      setFilteredProjects(filtered);\n    }\n  };\n\n  return (\n    <div className=\"justify-items-center\">\n      <div className=\"container\">\n        <div className=\"text-6xl flex justify-center font-light py-16\">\n          Myâ€…Projects\n        </div>\n\n        {/* Flexed row of tags */}\n        <div className=\"flex flex-wrap mb-4\">\n          {allTags.map((tag, i) => (\n            <div\n              key={i}\n              className={`badge m-0.5 text-black bg-white cursor-pointer ${\n                selectedTag === tag ? \"bg-gray-300\" : \"\"\n              }`}\n              onClick={() => filterProjects(tag)}\n            >\n              {tag}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"\">{projectList}</div>\n    </div>\n  );\n};\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}