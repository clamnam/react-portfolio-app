{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/pages/projects/Index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport projectsJSON from \"../../assets/data/projects.json\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [projects, setProjects] = useState(projectsJSON);\n  const filterProjects = filter => {\n    if (filter === \"All\") {\n      setFilteredProjects(projects);\n    } else {\n      const filtered = projects.filter(project => project.technologies.includes(filter));\n      setFilteredProjects(filtered);\n    }\n  };\n\n  // Define your dropdown options\n  const dropdownOptions = [\"All\", \"JavaScript\", \"React\", \"HTML\", \"Front-End\", \"Rest Client\", \"API\", \"CSS\", \"Tailwind\"];\n  const projectList = projects.map((project, i) => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: project,\n      cardKey: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"  justify-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl flex justify-center font-light  py-16\",\n        children: \"My\\u2005Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: projectList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n_s(Index, \"zfsyoMrpBksaOvOUcLKDbRvxlGc=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["useState","projectsJSON","ProjectCard","jsxDEV","_jsxDEV","Index","_s","projects","setProjects","filterProjects","filter","setFilteredProjects","filtered","project","technologies","includes","dropdownOptions","projectList","map","i","cardKey","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/pages/projects/Index.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport projectsJSON from \"../../assets/data/projects.json\";\r\n\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\n\r\n\r\n\r\n\r\nconst Index = () => {\r\n\tconst [projects, setProjects] = useState(projectsJSON);\r\n    const filterProjects = (filter) => {\r\n        if (filter === \"All\") {\r\n          setFilteredProjects(projects);\r\n        } else {\r\n          const filtered = projects.filter((project) =>\r\n            project.technologies.includes(filter)\r\n          );\r\n          setFilteredProjects(filtered);\r\n        }\r\n      };\r\n    \r\n      // Define your dropdown options\r\n      const dropdownOptions = [\r\n        \"All\",\r\n        \"JavaScript\",\r\n        \"React\",\r\n        \"HTML\",\r\n        \"Front-End\",\r\n        \"Rest Client\",\r\n        \"API\",\r\n        \"CSS\",\r\n        \"Tailwind\",\r\n      ];\r\n\tconst projectList = projects.map((project, i) => {\r\n\t\treturn <ProjectCard key={i} project={project} cardKey={i} />;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"  justify-items-center\">\r\n\t\t\t<div className=\"container \">\r\n\t\t\t\t<div className=\"text-6xl flex justify-center font-light  py-16\">\r\n\t\t\t\t\tMyâ€…Projects\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className=\"\">{projectList}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,YAAY,MAAM,iCAAiC;AAE1D,OAAOC,WAAW,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKvD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAACC,YAAY,CAAC;EACnD,MAAMQ,cAAc,GAAIC,MAAM,IAAK;IAC/B,IAAIA,MAAM,KAAK,KAAK,EAAE;MACpBC,mBAAmB,CAACJ,QAAQ,CAAC;IAC/B,CAAC,MAAM;MACL,MAAMK,QAAQ,GAAGL,QAAQ,CAACG,MAAM,CAAEG,OAAO,IACvCA,OAAO,CAACC,YAAY,CAACC,QAAQ,CAACL,MAAM,CACtC,CAAC;MACDC,mBAAmB,CAACC,QAAQ,CAAC;IAC/B;EACF,CAAC;;EAED;EACA,MAAMI,eAAe,GAAG,CACtB,KAAK,EACL,YAAY,EACZ,OAAO,EACP,MAAM,EACN,WAAW,EACX,aAAa,EACb,KAAK,EACL,KAAK,EACL,UAAU,CACX;EACN,MAAMC,WAAW,GAAGV,QAAQ,CAACW,GAAG,CAAC,CAACL,OAAO,EAAEM,CAAC,KAAK;IAChD,oBAAOf,OAAA,CAACF,WAAW;MAASW,OAAO,EAAEA,OAAQ;MAACO,OAAO,EAAED;IAAE,GAAhCA,CAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CAAC;EAC7D,CAAC,CAAC;EAEF,oBACCpB,OAAA;IAAKqB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACtCtB,OAAA;MAAKqB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC1BtB,OAAA;QAAKqB,SAAS,EAAC,gDAAgD;QAAAC,QAAA,EAAC;MAEhE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC,eACNpB,OAAA;MAAKqB,SAAS,EAAC,EAAE;MAAAC,QAAA,EAAET;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAER,CAAC;AAAClB,EAAA,CAxCID,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}