{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/pages/projects/Index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport projectsJSON from \"../../assets/data/projects.json\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [projects, setProjects] = useState(projectsJSON);\n  const [filteredProjects, setFilteredProjects] = useState(projectsJSON);\n  const [selectedOption, setSelectedOption] = useState(\"All\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.post('https://eu-central-1.aws.data.mongodb-api.com/app/data-jzgpz/endpoint/data/v1/action/findOne', {\n          \"collection\": \"Projects\",\n          \"database\": \"Portfolio\",\n          \"dataSource\": \"Cluster0\",\n          \"projection\": {\n            \"_id\": 1\n          }\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Request-Headers': '*',\n            'api-key': 'vwvSLHNFKkFCrL8eSgaqBXJ4oh6UEZTjY0nNmOJBsgQimv3r5i3RNxg7pAjkTn7C'\n          }\n        });\n        setProjects([response.data]); // Assuming your response is an array of projects, modify this accordingly\n        setFilteredProjects([response.data]);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n  const projectList = filteredProjects.map((project, i) => {\n    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project: project,\n      cardKey: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  });\n  const filterProjects = filter => {\n    setSelectedOption(filter);\n    if (filter === \"All\") {\n      setFilteredProjects(projects);\n    } else {\n      const filtered = projects.filter(project => project.tags.includes(filter));\n      setFilteredProjects(filtered);\n    }\n  };\n  const tags = [\"All\", \"JavaScript\", \"React\", \"HTML\", \"Front-End\", \"Rest Client\", \"API\", \"CSS\", \"Tailwind\", \"Python\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"justify-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-6xl flex justify-center font-light py-16\",\n        children: \"My\\u2005Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative text-left flex justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-dropdown\",\n          onClick: () => filterProjects(selectedOption)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" flex justify-center my-3\",\n          children: tags.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"badge mx-1 cursor-pointer p-3 badge-outline \",\n            role: \"menuitem\",\n            onClick: () => filterProjects(option),\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: projectList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n_s(Index, \"JuVdaFDlKyKr6D4E4Zp9rBO9p5Q=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","projectsJSON","ProjectCard","jsxDEV","_jsxDEV","Index","_s","projects","setProjects","filteredProjects","setFilteredProjects","selectedOption","setSelectedOption","useEffect","fetchData","response","axios","post","headers","data","error","console","projectList","map","project","i","cardKey","fileName","_jsxFileName","lineNumber","columnNumber","filterProjects","filter","filtered","tags","includes","className","children","type","onClick","option","role","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/src/pages/projects/Index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport projectsJSON from \"../../assets/data/projects.json\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\n\r\nconst Index = () => {\r\n\tconst [projects, setProjects] = useState(projectsJSON);\r\n\tconst [filteredProjects, setFilteredProjects] = useState(projectsJSON);\r\n\tconst [selectedOption, setSelectedOption] = useState(\"All\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.post('https://eu-central-1.aws.data.mongodb-api.com/app/data-jzgpz/endpoint/data/v1/action/findOne', {\r\n                    \"collection\": \"Projects\",\r\n                    \"database\": \"Portfolio\",\r\n                    \"dataSource\": \"Cluster0\",\r\n                    \"projection\": {\r\n                        \"_id\": 1\r\n                    }\r\n                }, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Request-Headers': '*',\r\n                        'api-key': 'vwvSLHNFKkFCrL8eSgaqBXJ4oh6UEZTjY0nNmOJBsgQimv3r5i3RNxg7pAjkTn7C',\r\n                    },\r\n                });\r\n\r\n                setProjects([response.data]); // Assuming your response is an array of projects, modify this accordingly\r\n                setFilteredProjects([response.data]);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // The empty dependency array ensures that this effect runs once when the component mounts\r\n\r\n    const projectList = filteredProjects.map((project, i) => {\r\n        return <ProjectCard key={i} project={project} cardKey={i} />;\r\n    });\r\n\r\n    const filterProjects = (filter) => {\r\n        setSelectedOption(filter);\r\n\r\n        if (filter === \"All\") {\r\n            setFilteredProjects(projects);\r\n        } else {\r\n            const filtered = projects.filter((project) =>\r\n                project.tags.includes(filter)\r\n            );\r\n            setFilteredProjects(filtered);\r\n        }\r\n    };\r\n\r\n    const tags = [\r\n        \"All\",\r\n        \"JavaScript\",\r\n        \"React\",\r\n        \"HTML\",\r\n        \"Front-End\",\r\n        \"Rest Client\",\r\n        \"API\",\r\n        \"CSS\",\r\n        \"Tailwind\",\r\n        \"Python\"\r\n    ];\r\n\r\n\treturn (\r\n\t\t<div className=\"justify-items-center\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"text-6xl flex justify-center font-light py-16\">\r\n\t\t\t\t\tMyâ€…Projects\r\n\t\t\t\t</div>\r\n\t\t\t<div className=\"relative text-left flex justify-center\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn-dropdown\"\r\n\t\t\t\t\t\tonClick={() => filterProjects(selectedOption)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className=\" flex justify-center my-3\">\r\n\r\n\t\t\t\t\t\t\t{tags.map((option) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\t\t\tclassName=\"badge mx-1 cursor-pointer p-3 badge-outline \"\r\n\t\t\t\t\t\t\t\t\trole=\"menuitem\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => filterProjects(option)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"\">{projectList}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}