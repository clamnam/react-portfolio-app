{"ast":null,"code":"\"use strict\";\n\nvar uniRegexp = require(\"./uni-regexp\");\nvar identifierEscapeRegexp = new RegExp(uniRegexp.identifierEscapeRegexp, \"g\");\nfunction escape(str, identifier) {\n  if (str === \"*\") {\n    return \"*\";\n  }\n  if (identifier) {\n    return str.replace(identifierEscapeRegexp, \"\\\\$1\");\n  } else {\n    return str.replace(/(^[^A-Za-z_\\\\-]|^--|[^A-Za-z_0-9\\\\-])/g, \"\\\\$1\");\n  }\n}\nfunction stringifyWithoutBeforeAfter(tree) {\n  switch (tree.type) {\n    case \"selectors\":\n      return tree.nodes.map(stringify).join(\",\");\n    case \"selector\":\n      return tree.nodes.map(stringify).join(\"\");\n    case \"element\":\n      return (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + escape(tree.name);\n    case \"class\":\n      return \".\" + escape(tree.name, true);\n    case \"id\":\n      return \"#\" + escape(tree.name, true);\n    case \"attribute\":\n      return \"[\" + tree.content + \"]\";\n    case \"spacing\":\n      return tree.value;\n    case \"pseudo-class\":\n      return \":\" + escape(tree.name) + (typeof tree.content === \"string\" ? \"(\" + tree.content + \")\" : \"\");\n    case \"nested-pseudo-class\":\n      return \":\" + escape(tree.name) + \"(\" + tree.nodes.map(stringify).join(\",\") + \")\";\n    case \"pseudo-element\":\n      return \"::\" + escape(tree.name);\n    case \"universal\":\n      return (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + \"*\";\n    case \"operator\":\n      return tree.operator;\n    case \"comment\":\n      return \"/*\" + tree.content + \"*/\";\n    case \"invalid\":\n      return tree.value;\n  }\n}\nfunction stringify(tree) {\n  var str = stringifyWithoutBeforeAfter(tree);\n  if (tree.before) {\n    str = tree.before + str;\n  }\n  if (tree.after) {\n    str = str + tree.after;\n  }\n  return str;\n}\nmodule.exports = stringify;","map":{"version":3,"names":["uniRegexp","require","identifierEscapeRegexp","RegExp","escape","str","identifier","replace","stringifyWithoutBeforeAfter","tree","type","nodes","map","stringify","join","namespace","name","content","value","operator","before","after","module","exports"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/react-portfolio/react-portfolio-app/react-portfolio-app/node_modules/css-selector-tokenizer/lib/stringify.js"],"sourcesContent":["\"use strict\";\n\nvar uniRegexp = require(\"./uni-regexp\");\nvar identifierEscapeRegexp = new RegExp(uniRegexp.identifierEscapeRegexp, \"g\");\n\nfunction escape(str, identifier) {\n\tif(str === \"*\") {\n\t\treturn \"*\";\n\t}\n\tif (identifier) {\n\t\treturn str.replace(identifierEscapeRegexp, \"\\\\$1\");\n\t} else {\n\t\treturn str.replace(/(^[^A-Za-z_\\\\-]|^--|[^A-Za-z_0-9\\\\-])/g, \"\\\\$1\");\n\t}\n}\n\nfunction stringifyWithoutBeforeAfter(tree) {\n\tswitch(tree.type) {\n\tcase \"selectors\":\n\t\treturn tree.nodes.map(stringify).join(\",\");\n\tcase \"selector\":\n\t\treturn tree.nodes.map(stringify).join(\"\");\n\tcase \"element\":\n\t\treturn (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + escape(tree.name);\n\tcase \"class\":\n\t\treturn \".\" + escape(tree.name, true);\n\tcase \"id\":\n\t\treturn \"#\" + escape(tree.name, true);\n\tcase \"attribute\":\n\t\treturn \"[\" + tree.content + \"]\";\n\tcase \"spacing\":\n\t\treturn tree.value;\n\tcase \"pseudo-class\":\n\t\treturn \":\" + escape(tree.name) + (typeof tree.content === \"string\" ? \"(\" + tree.content + \")\" : \"\");\n\tcase \"nested-pseudo-class\":\n\t\treturn \":\" + escape(tree.name) + \"(\" + tree.nodes.map(stringify).join(\",\") + \")\";\n\tcase \"pseudo-element\":\n\t\treturn \"::\" + escape(tree.name);\n\tcase \"universal\":\n\t\treturn (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + \"*\";\n\tcase \"operator\":\n\t\treturn tree.operator;\n\tcase \"comment\":\n\t\treturn \"/*\" + tree.content + \"*/\";\n\tcase \"invalid\":\n\t\treturn tree.value;\n\t}\n}\n\n\nfunction stringify(tree) {\n\tvar str = stringifyWithoutBeforeAfter(tree);\n\tif(tree.before) {\n\t\tstr = tree.before + str;\n\t}\n\tif(tree.after) {\n\t\tstr = str + tree.after;\n\t}\n\treturn str;\n}\n\nmodule.exports = stringify;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;AACvC,IAAIC,sBAAsB,GAAG,IAAIC,MAAM,CAACH,SAAS,CAACE,sBAAsB,EAAE,GAAG,CAAC;AAE9E,SAASE,MAAMA,CAACC,GAAG,EAAEC,UAAU,EAAE;EAChC,IAAGD,GAAG,KAAK,GAAG,EAAE;IACf,OAAO,GAAG;EACX;EACA,IAAIC,UAAU,EAAE;IACf,OAAOD,GAAG,CAACE,OAAO,CAACL,sBAAsB,EAAE,MAAM,CAAC;EACnD,CAAC,MAAM;IACN,OAAOG,GAAG,CAACE,OAAO,CAAC,wCAAwC,EAAE,MAAM,CAAC;EACrE;AACD;AAEA,SAASC,2BAA2BA,CAACC,IAAI,EAAE;EAC1C,QAAOA,IAAI,CAACC,IAAI;IAChB,KAAK,WAAW;MACf,OAAOD,IAAI,CAACE,KAAK,CAACC,GAAG,CAACC,SAAS,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAC3C,KAAK,UAAU;MACd,OAAOL,IAAI,CAACE,KAAK,CAACC,GAAG,CAACC,SAAS,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IAC1C,KAAK,SAAS;MACb,OAAO,CAAC,OAAOL,IAAI,CAACM,SAAS,KAAK,QAAQ,GAAGX,MAAM,CAACK,IAAI,CAACM,SAAS,CAAC,GAAG,GAAG,GAAG,EAAE,IAAIX,MAAM,CAACK,IAAI,CAACO,IAAI,CAAC;IACpG,KAAK,OAAO;MACX,OAAO,GAAG,GAAGZ,MAAM,CAACK,IAAI,CAACO,IAAI,EAAE,IAAI,CAAC;IACrC,KAAK,IAAI;MACR,OAAO,GAAG,GAAGZ,MAAM,CAACK,IAAI,CAACO,IAAI,EAAE,IAAI,CAAC;IACrC,KAAK,WAAW;MACf,OAAO,GAAG,GAAGP,IAAI,CAACQ,OAAO,GAAG,GAAG;IAChC,KAAK,SAAS;MACb,OAAOR,IAAI,CAACS,KAAK;IAClB,KAAK,cAAc;MAClB,OAAO,GAAG,GAAGd,MAAM,CAACK,IAAI,CAACO,IAAI,CAAC,IAAI,OAAOP,IAAI,CAACQ,OAAO,KAAK,QAAQ,GAAG,GAAG,GAAGR,IAAI,CAACQ,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;IACpG,KAAK,qBAAqB;MACzB,OAAO,GAAG,GAAGb,MAAM,CAACK,IAAI,CAACO,IAAI,CAAC,GAAG,GAAG,GAAGP,IAAI,CAACE,KAAK,CAACC,GAAG,CAACC,SAAS,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;IACjF,KAAK,gBAAgB;MACpB,OAAO,IAAI,GAAGV,MAAM,CAACK,IAAI,CAACO,IAAI,CAAC;IAChC,KAAK,WAAW;MACf,OAAO,CAAC,OAAOP,IAAI,CAACM,SAAS,KAAK,QAAQ,GAAGX,MAAM,CAACK,IAAI,CAACM,SAAS,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG;IACtF,KAAK,UAAU;MACd,OAAON,IAAI,CAACU,QAAQ;IACrB,KAAK,SAAS;MACb,OAAO,IAAI,GAAGV,IAAI,CAACQ,OAAO,GAAG,IAAI;IAClC,KAAK,SAAS;MACb,OAAOR,IAAI,CAACS,KAAK;EAClB;AACD;AAGA,SAASL,SAASA,CAACJ,IAAI,EAAE;EACxB,IAAIJ,GAAG,GAAGG,2BAA2B,CAACC,IAAI,CAAC;EAC3C,IAAGA,IAAI,CAACW,MAAM,EAAE;IACff,GAAG,GAAGI,IAAI,CAACW,MAAM,GAAGf,GAAG;EACxB;EACA,IAAGI,IAAI,CAACY,KAAK,EAAE;IACdhB,GAAG,GAAGA,GAAG,GAAGI,IAAI,CAACY,KAAK;EACvB;EACA,OAAOhB,GAAG;AACX;AAEAiB,MAAM,CAACC,OAAO,GAAGV,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}